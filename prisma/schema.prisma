generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model compound_interest {
  id                    String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  interest_rate         Float
  principal_amount      Float
  time_period           Int
  compounding_frequency String        @db.VarChar(255)
  organization_id       String?       @db.Uuid
  created_at            DateTime      @default(now()) @db.Timestamp(6)
  updated_at            DateTime      @default(now()) @db.Timestamp(6)
  organization          organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model customer_request {
  id              String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  request_period  String        @db.VarChar(255)
  customer_id     String?       @db.Uuid
  organization_id String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  user            user?         @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description       String?             @db.VarChar(255)
  image             String?             @db.VarChar(255)
  name              String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  user_id           String              @db.Uuid
  tenant_id         String              @db.VarChar(255)
  compound_interest compound_interest[]
  customer_request  customer_request[]
  user              user                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  customer_request customer_request[]
  organization     organization[]
}
